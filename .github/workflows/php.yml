name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [7.1]


    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php${{ matrix.php }}-

    - name: Remove phpstan on PHP <= 7.1
      if: matrix.php == '7.1'
      steps:
      - run: composer remove phpstan/phpstan --dev --no-update
      - run: composer require "phpunit/phpunit:^7.0" --dev --no-update
      - run: composer update

    - name: Downgrade phpunit to a version that supports PHP 7.2
      if: matrix.php == '7.2'
      run: composer require "phpunit/phpunit:^8.0" --dev --no-update


    - name: Downgrade phpunit to a version that supports PHP 7.0
      if: matrix.php == '7.0'
      run: composer require "phpunit/phpunit:^6.0" --dev

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run phpunit (test cases)
      run: composer run-script test-no-cov

    - name: Run phpstan (to check php syntax)
      run: composer run-script phpcs-all

    - name: run phpcs (to check coding style)
      run: composer run-script phpcs-all
